127.0.0.1 : 8001
test rest api
https://insomnia.rest/download
https://www.jenkins.io/
https://www.docker.com/


list document
https://www.fastify.io/
https://knexjs.org/
https://nextjs.org/docs/advanced-features/custom-document
https://typeorm.io/#/
https://expressjs.com/en/starter/installing.html
https://reactjs.org/
https://angular.io/
https://nodejs.org/en/docs/
https://reactnative.dev/docs/getting-started
https://www.typescriptlang.org/docs/
https://dev.mysql.com/doc/
https://docs.mongodb.com/manual/
https://www.npmjs.com/package/jsonwebtoken

https://www.bezkoder.com/react-node-express-mysql/

https://futureskill.co/
https://www.udemy.com/

https://github.com/fastify/fastify-oauth2
npm i --save fastify-oauth2 -S  // ต่อ google or facebook 

https://github.com/ToonvanStrijp/fastify-oauth-server
npm install fastify-oauth-server -S  // ทำ oauth

https://github.com/fastify/fastify-mongodb

npm i --save fastify-oauth2 -S
https://github.com/fastify/fastify-oauth2


oauth2
https://www.npmjs.com/package/oauth2-server
-https://github.com/14gasher/oauth-example

https://www.npmjs.com/package/oauth2-server-typescript
npm install oauth2-server
npm install oauth2-server -S
https://oauth2-server.readthedocs.io/en/latest/misc/migrating-v2-to-v3.html

###########
https://www.npmjs.com/package/client-oauth2

  npm install client-oauth2 --save

var ClientOAuth2 = require('client-oauth2')
var githubAuth = new ClientOAuth2({
  clientId: 'abc',
  clientSecret: '123',
  accessTokenUri: 'https://github.com/login/oauth/access_token',
  authorizationUri: 'https://github.com/login/oauth/authorize',
  redirectUri: 'http://example.com/auth/github/callback',
  scopes: ['notifications', 'gist']
})



npm install body-parser -S


node -v
npm -v

npm i

npm i -g typescript

npm i fastify --save

npm init -y

npm i -D typescript @types/node


tsc --init

npm i @sinclair/typebox

npm i fastify-cors -S

npm i fastify-knexjs -S

npm i fastify-knexjs knex mysql2 -S


npm i fastify-formbody -S

npm i fastify-mysql  -S

npm i fastify-mysql2 -S

npm i fastify-redis -S

npm i fastify-memorycache -S

npm i fastify-plugin -S

npm i  -g nodemon -S   // npm install -g nodemon

npm i fastify-socket.io -S

npm i ws -S

npm i uuid -S

npm i @types/ws -D

npm i -D json-schema-to-typescript
npm i  json-schema-to-typescript -S

https://github.com/fastify/fastify-redis 

npm i --save fastify-plugin fastify-mongodb


npm i fastify-jwt jsonwebtoken -S


npm i fastify-cli -S

npm i -g pm2


npm i && npm run build:dist

npm install -g typescript

การ complie  

tsc -p tsconfig.json


npm install -g nodemon -S
npm install --save-dev nodemon
Run

server.ts
const port = 8081
const address = '127.0.0.1'

npx nodemon  -->  run project เรา 

npm run start

node disc\server.json

npm start

nodemon --exec npm run dev


npm i fastify-mongodb -S   



การ complie  
    tsc -p tsconfig.json
Run
    npm run build

npm install --global gulp-cli

npm install --save-dev gulp-sourcemaps gulp-sourcemaps-support

npm install gulp gulp-clean gulp-cli gulp-sourcemaps gulp-sourcemaps-support gulp-typescript gulp-uglify readable-stream -D

npx gulp





Theme

npm i admin-lte -S
 
https://github.com/fastify/fastify-helmet


npm i fastify-helmet -S




typescript

npm install --save fastify-angular
https://github.com/clarkorz/fastify-angular

npm i fastify-react next --save
https://www.npmjs.com/package/fastify-react

https://medium.com/swlh/fullstack-crud-application-using-fastify-react-redux-mongodb-part-1-9e8df39c6fff


https://github.com/fastify/fastify-jwt

fastify jwt oauth2
npm i fastify-jwt --save

fastify-oauth2
https://github.com/fastify/fastify-oauth2

APPLE_CONFIGURATION
FACEBOOK_CONFIGURATION
GITHUB_CONFIGURATION
LINKEDIN_CONFIGURATION
GOOGLE_CONFIGURATION
MICROSOFT_CONFIGURATION
VKONTAKTE_CONFIGURATION
SPOTIFY_CONFIGURATION
DISCORD_CONFIGURATION

https://dev.to/abhinavsachdeva/oauth-with-fastify-3b4n

npm i fastify-cors fastify-oauth2 -S


templates
npm install point-of-view --save
https://github.com/fastify/point-of-view

https://github.com/mehmetsefabalik/fastify-template

https://github.com/mikeclagg/fastify-base-microservice

npm install point-of-view --save
https://github.com/fastify/point-of-view


https://www.youtube.com/watch?v=neW4JwkZCa4
https://github.com/loganking/Express-Knex-TDD-CRUD-Example/blob/master/routes/api_v1/puppies.js
https://github.com/loganking/Express-Knex-TDD-CRUD-Example
https://knexjs.org
https://knexjs.org/#Builder-where

https://gist.github.com/sean-blattenberger/1cd153381046156bd2b280f24eeedea6

https://github.com/Kannaj/node-knex-sample
https://www.npmjs.com/package/knex-crud/v/0.0.5


npm i knex-crud -S

npm i fastify-typeorm  -S
npm i fastify-typeorm-plugin -S
https://github.com/inthepocket/fastify-typeorm-plugin

https://dev.to/carlbarrdahl/building-a-rest-api-using-fastify-and-typeorm-39bp
https://typeorm.io/#/select-query-builder/adding-having-expression
https://www.npmjs.com/package/fastify-typeorm

https://github.com/carlbarrdahl/fastify-server-example

https://typeorm.io/#/select-query-builder/adding-where-expression

npm i reflect-metadata -S

npm i @fastify-resty/typeorm typeorm -S
https://github.com/FastifyResty/fastify-resty
https://github.com/FastifyResty/fastify-resty/blob/main/docs/Quickstart.md
https://www.fastify.io/docs/latest/Middleware/

npm i fastify-express -S 
https://github.com/fastify/fastify-express
npm i fastify-nextjs next react react-dom --save
https://github.com/fastify/fastify-nextjs


https://github.com/Deepak-Vohra/typescript/tree/master/MySQLProject

npm install  pm2 -S
npm i pm2 install pm2-server-monit  -S

# คำสั่งสำหรับแสดง process ทั้งหมดใน server ที่เรามี
pm2 list
# คำสั่งสำหรับแสดงรายละเอียด process
pm2 show <id|name|all> 
# คำสั่ง restart process
pm2 restart <id|name|all>
# คำสั่ง stop process
pm2 stop <id|name|all>
# คำสั่งดูรายละเอียดของเครื่อง server และ process ที่ทำงาน
pm2 dash

https://www.npmjs.com/package/pm2-gui
https://www.npmjs.com/search?q=keywords:PM2%20dashboard

PM2 Web interface.

Image of web-pm2

Usage
Install: npm install -g web-pm2

Run: web-pm2

enter: http://localhost:3666/



https://github.com/alexnzarov/pm2-web-ui




Run service
pm2 start dist\server.js --name "appservicev1"

pm2 start dist\server.js --name "appservicev1"

pm2 restart 0

https://github.com/websockets/ws
https://www.softpedia.com/get/Internet/Other-Internet-Related/Socket-io-tester.shtml


pm2 reset all